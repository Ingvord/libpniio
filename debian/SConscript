Import("build_env")

#create rules file
rules_source = ["","%:","\tdh $@",""]

#substitution dictionary for Debian packages
debian_dict={"@SOURCE@":"$LIBPREFIX$LIBNAME","@MAINTAINER@":"$MAINTAINER",
              "@MAINTAINER_MAIL@":"$MAINTAINER_MAIL",
              "@PKGNAMEROOT@":"$PKGNAMEROOT","@VERSION@":"$VERSION"}
                  
#----------------------general purpose files for debhelper----------------------                  
#create control file                  
control_file = build_env.Substfile(["control.in"],SUBST_DICT=debian_dict)
build_env.NoClean(control_file)

#changelog file
changelog_file = build_env.Substfile(["changelog.in"],SUBST_DICT=debian_dict)                                  
build_env.NoClean(changelog_file)

#creating rules file
rules_file = build_env.Textfile(target="rules",source=rules_source,
                                TEXTFILESUFFIX="")
build_env.NoClean(rules_file)

#create compat file
compat_file = build_env.Substfile(["compat.in"])
build_env.NoClean(compat_file)

#-----------------create package specific packages------------------------------
lib_pkg_dirs = build_env.Textfile(target="${PKGNAMEROOT}",
               source=["${LIBINSTPATH}"],TEXTFILESUFFIX=".dirs")
build_env.NoClean(lib_pkg_dirs)
lib_pkg_install = build_env.Textfile(target="${PKGNAMEROOT}",
                  source=["${LIBINSTPATH}/lib*.so.*"],TEXTFILESUFFIX=".install")
build_env.NoClean(lib_pkg_install)

dev_pkg_dirs = build_env.Textfile(target="${PKGNAMEROOT}-dev",
               source=["${LIBINSTPATH}","${INCINSTPATH}"],
               TEXTFILESUFFIX=".dirs")
build_env.NoClean(dev_pkg_dirs)
dev_pkg_install = build_env.Textfile(target="${PKGNAMEROOT}-dev",
                  source=["${INCINSTPATH}/*",
                          "${LIBINSTPATH}/lib*.a","usr/lib/lib*.so",
                          "${LIBINSTPATH}/pkgconfig/*"],
                  TEXTFILESUFFIX=".install")
build_env.NoClean(dev_pkg_install)                                                               

doc_pkg_dirs = build_env.Textfile(target="${PKGNAMEROOT}-doc",
                                  source=["${DOCDIR}"],TEXTFILESUFFIX=".dirs")
build_env.NoClean(doc_pkg_dirs)                                                                      
doc_pkg_install = build_env.Textfile(target="${PKGNAMEROOT}-doc",
                                     source=["${DOCDIR}/*"],
                                     TEXTFILESUFFIX=".install")
build_env.NoClean(doc_pkg_install)

#--------------gather everything under a single alias target--------------------
build_env.Alias("debian",[control_file,compat_file,lib_pkg_dirs,lib_pkg_install,
                          dev_pkg_dirs,dev_pkg_install,
                          doc_pkg_dirs,doc_pkg_install,changelog_file,rules_file])
