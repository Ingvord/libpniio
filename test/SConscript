import re
from os import path
Import("test_env")



sources_list = []

sources_list.append("data.cpp")
sources_list.append("EqualityCheck.cpp")

sources_list.append("pniiotest.cpp")
sources_list.append("NXFileTest.cpp")
sources_list.append("NXGroupTest.cpp")
sources_list.append("NXFieldTest.cpp")
sources_list.append("NXSelectionTest.cpp")
sources_list.append("NXAttributeTest.cpp")

#tests for the HDF5 implementation backend
sources_list.append("H5ObjectTest.cpp")
sources_list.append("H5DataspaceTest.cpp")
sources_list.append("H5DatatypeTest.cpp")
sources_list.append("H5NamedObjectTest.cpp")
sources_list.append("H5AttributeObjectTest.cpp")
sources_list.append("H5FileTest.cpp")
sources_list.append("H5GroupTest.cpp")
sources_list.append("H5DatasetTest.cpp")
sources_list.append("H5AttributeTest.cpp")
sources_list.append("value_parser_test.cpp")
sources_list.append("slice_parser_test.cpp")
sources_list.append("array_parser_test.cpp")
sources_list.append("record_parser_test.cpp")
sources_list.append("nxutils_test.cpp")
sources_list.append("nxpath_test.cpp")
sources_list.append("nxpath_utils_test.cpp")
sources_list.append("is_group_test.cpp")
sources_list.append("is_field_test.cpp")
sources_list.append("is_attribute_test.cpp")
sources_list.append("get_attribute_test.cpp")
sources_list.append("is_valid_test.cpp")
sources_list.append("get_class_test.cpp")
sources_list.append("set_class_test.cpp")
sources_list.append("is_class_test.cpp")
sources_list.append("set_unit_test.cpp")
sources_list.append("get_unit_test.cpp")
sources_list.append("get_parent_test.cpp")
sources_list.append("get_child_test.cpp")
sources_list.append("get_object_test.cpp")
sources_list.append("get_shape_test.cpp")
sources_list.append("get_type_test.cpp")
sources_list.append("get_rank_test.cpp")
sources_list.append("as_field_test.cpp")
sources_list.append("as_group_test.cpp")
#sources_list.append("H5SelectionTest.cpp")
#sources_list.append("H5LinkTest.cpp")
#sources_list.append("TestHelpers.cpp")


#sources for benchmark code

pninx_test = test_env.Program("pniiotest",sources_list)


test_env.Alias("test",[pninx_test])
