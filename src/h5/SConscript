from os import path

Import("build_env")

src_list = ["NXFileH5Implementation.cpp",
            "H5TypeFactory.cpp","NXObjectH5Implementation.cpp",
            "NXGroupH5Implementation.cpp",
            "NXFieldH5Implementation.cpp",
            "H5Exceptions.cpp","H5LibrarySetup.cpp",
            "H5ErrorStack.cpp","H5Error.cpp","H5Utilities.cpp",
            "H5Filter.cpp","H5LZFFilter.cpp","H5DeflateFilter.cpp",
            "NXSelectionH5Implementation.cpp"]
            
shared_objects = build_env.SharedObject(src_list)
static_objects = build_env.StaticObject(src_list)
(filter_shared_objects,filter_static_objects) = SConscript("filters/SConscript")
shared_objects.extend(filter_shared_objects)
static_objects.extend(filter_static_objects)

#manage header installation
inch5_inst = build_env.Install(path.join(build_env["PREFIX"],"include/pni/nx/h5"),Glob("*.hpp"))
build_env.Alias("install",[inch5_inst])


Return("shared_objects static_objects")